"use strict";(self.webpackChunkcontrast_docs=self.webpackChunkcontrast_docs||[]).push([[3533],{28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(96540);const r={},o=i.createContext(r);function s(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:t},e.children)}},77466:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"architecture/components/initializer","title":"Initializer","description":"Contrast provides an Initializer that handles the remote attestation on the workload side transparently and","source":"@site/docs/architecture/components/initializer.md","sourceDirName":"architecture/components","slug":"/architecture/components/initializer","permalink":"/contrast/next/architecture/components/initializer","draft":false,"unlisted":false,"editUrl":"https://github.com/edgelesssys/contrast/edit/main/docs/docs/architecture/components/initializer.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Policies","permalink":"/contrast/next/architecture/components/policies"},"next":{"title":"Coordinator","permalink":"/contrast/next/architecture/components/coordinator"}}');var r=n(74848),o=n(28453);const s={},a="Initializer",c={},d=[];function l(e){const t={a:"a",code:"code",h1:"h1",header:"header",p:"p",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"initializer",children:"Initializer"})}),"\n",(0,r.jsxs)(t.p,{children:["Contrast provides an Initializer that handles the remote attestation on the workload side transparently and\nfetches the workload certificate.\nThe Initializer runs as an init container before your workload is started.\nIt provides the workload container and the ",(0,r.jsx)(t.a,{href:"/contrast/next/architecture/components/service-mesh",children:"service mesh sidecar"})," with the workload certificates."]}),"\n",(0,r.jsxs)(t.p,{children:["The initializer periodically connects to the ",(0,r.jsx)(t.a,{href:"/contrast/next/architecture/components/coordinator#services",children:(0,r.jsx)(t.code,{children:"coordinator-ready"})})," service in its own namespace until it receives a successful response.\nThis means that workload pods with an initializer will stay in the ",(0,r.jsx)(t.code,{children:"Init"})," phase until a Coordinator manifest is set that allows their policy."]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);