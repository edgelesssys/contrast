From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Markus Rudy <mr@edgeless.systems>
Date: Fri, 6 Dec 2024 17:14:57 +0100
Subject: [PATCH] genpolicy: support guest hooks

Some custom images come with guest hooks that are required to set up
VM-level resources for containers, such as GPU support.

This commit adds a new setting, `allowed_guest_hooks`, which controls
what paths may be set for hooks.

Signed-off-by: Markus Rudy <mr@edgeless.systems>
---
 src/tools/genpolicy/genpolicy-settings.json |  3 ++-
 src/tools/genpolicy/rules.rego              | 17 ++++++++++++++++-
 src/tools/genpolicy/src/policy.rs           |  2 ++
 3 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/src/tools/genpolicy/genpolicy-settings.json b/src/tools/genpolicy/genpolicy-settings.json
index 8340cd33c7023d43ecfab6d34939e0b65bbe92a0..4918d32a21424877ee8f73474126102e167f651f 100644
--- a/src/tools/genpolicy/genpolicy-settings.json
+++ b/src/tools/genpolicy/genpolicy-settings.json
@@ -224,7 +224,8 @@
                 "mount_point": "/run/kata-containers/sandbox/shm",
                 "fs_group": null
             }
-        ]
+        ],
+        "allowed_guest_hooks": ["/usr/share/oci/hooks"]
     },
     "common": {
         "cpath": "/run/kata-containers/shared/containers",
diff --git a/src/tools/genpolicy/rules.rego b/src/tools/genpolicy/rules.rego
index 95972812f90e61742c892a0f7ad6a647c080d2f1..048439d8dbdc006b44d131eec65128b351989225 100644
--- a/src/tools/genpolicy/rules.rego
+++ b/src/tools/genpolicy/rules.rego
@@ -1270,7 +1270,7 @@ CopyFileRequest if {
 
 CreateSandboxRequest if {
     print("CreateSandboxRequest: input.guest_hook_path =", input.guest_hook_path)
-    count(input.guest_hook_path) == 0
+    allow_hook(input.guest_hook_path)
 
     print("CreateSandboxRequest: input.kernel_modules =", input.kernel_modules)
     count(input.kernel_modules) == 0
@@ -1281,6 +1281,21 @@ CreateSandboxRequest if {
     allow_sandbox_storages(input.storages)
 }
 
+allow_hook(i_hook) {
+    print("allow_hook 1: start")
+    count(i_hook) == 0
+    print("allow_hook 1: true")
+}
+
+allow_hook(i_hook) {
+    print("allow_hook 2: start")
+    p_hooks := policy_data.sandbox.allowed_guest_hooks
+    print("allow_hook 2: p_hooks =", p_hooks)
+    print("allow_hook 2: i_hook =", i_hook)
+    i_hook in p_hooks
+    print("allow_hook 2: true")
+}
+
 allow_exec(p_container, i_process) if {
     print("allow_exec: start")
 
diff --git a/src/tools/genpolicy/src/policy.rs b/src/tools/genpolicy/src/policy.rs
index f899a24bb2d171661a673b5c5ea6959165077f33..728fb35afb1852412dae7fd55b3cbfa164c36ac9 100644
--- a/src/tools/genpolicy/src/policy.rs
+++ b/src/tools/genpolicy/src/policy.rs
@@ -447,6 +447,8 @@ pub struct ClusterConfig {
 pub struct SandboxData {
     /// Expected value of the CreateSandboxRequest storages field.
     pub storages: Vec<agent::Storage>,
+    /// Guest hook paths that are allowed to be set in all CreateContainerRequests.
+    pub allowed_guest_hooks: Vec<String>,
 }
 
 enum K8sEnvFromSource {
