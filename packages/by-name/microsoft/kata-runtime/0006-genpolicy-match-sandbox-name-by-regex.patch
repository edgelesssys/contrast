From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Paul Meyer <katexochen0@gmail.com>
Date: Mon, 5 May 2025 16:39:24 +0200
Subject: [PATCH] genpolicy: match sandbox name by regex

Signed-off-by: Paul Meyer <katexochen0@gmail.com>
Signed-off-by: Markus Rudy <mr@edgeless.systems>
---
 src/tools/genpolicy/rules.rego                    | 10 +++++++++-
 src/tools/genpolicy/src/cronjob.rs                |  8 +++++++-
 src/tools/genpolicy/src/daemon_set.rs             |  4 +++-
 src/tools/genpolicy/src/deployment.rs             |  6 +++++-
 src/tools/genpolicy/src/job.rs                    | 12 +++++++++++-
 src/tools/genpolicy/src/obj_meta.rs               |  2 +-
 src/tools/genpolicy/src/pod.rs                    |  6 +-----
 src/tools/genpolicy/src/policy.rs                 |  2 +-
 src/tools/genpolicy/src/replica_set.rs            |  4 +++-
 src/tools/genpolicy/src/replication_controller.rs |  5 ++++-
 src/tools/genpolicy/src/stateful_set.rs           |  3 ++-
 src/tools/genpolicy/src/yaml.rs                   | 13 +++++++++++++
 12 files changed, 60 insertions(+), 15 deletions(-)

diff --git a/src/tools/genpolicy/rules.rego b/src/tools/genpolicy/rules.rego
index 97603d6fe5d2a3a297905886d828c55d222470b3..cd67f8a544efa5d91195e5dd7b4f19c793c60122 100644
--- a/src/tools/genpolicy/rules.rego
+++ b/src/tools/genpolicy/rules.rego
@@ -472,7 +472,15 @@ allow_by_sandbox_name(p_oci, i_oci, p_storages, i_storages, s_name, s_namespace)
 }
 
 allow_sandbox_name(p_s_name, i_s_name) {
-    print("allow_sandbox_name: start")
+    print("allow_sandbox_name 1: start")
+
+    p_s_name == i_s_name
+
+    print("allow_sandbox_name 1: true")
+}
+allow_sandbox_name(p_s_name, i_s_name) {
+    print("allow_sandbox_name 2: start")
+
     regex.match(p_s_name, i_s_name)
 
     print("allow_sandbox_name: true")
diff --git a/src/tools/genpolicy/src/cronjob.rs b/src/tools/genpolicy/src/cronjob.rs
index 61a43675a53db19a54cbdb5aa6d0e280d3afb39e..8cb04c41242a1c4813f019fd98e49e94a0eaa2d4 100644
--- a/src/tools/genpolicy/src/cronjob.rs
+++ b/src/tools/genpolicy/src/cronjob.rs
@@ -19,6 +19,7 @@ use crate::yaml;
 use async_trait::async_trait;
 use serde::{Deserialize, Serialize};
 use std::collections::BTreeMap;
+use std::vec;
 
 /// See Reference / Kubernetes API / Workload Resources / CronJob.
 #[derive(Clone, Debug, Serialize, Deserialize)]
@@ -81,7 +82,12 @@ impl yaml::K8sResource for CronJob {
     }
 
     fn get_sandbox_name(&self) -> Option<String> {
-        None
+        // CronJob name - time[min]
+        // https://github.com/kubernetes/kubernetes/blob/b35c5c0a301d326fdfa353943fca077778544ac6/pkg/controller/cronjob/cronjob_controllerv2.go#L672
+        let cronjob_name = yaml::name_regex_from_meta(&self.metadata);
+        let job_name = cronjob_name.map(|prefix| format!("{prefix}-[0-9]+"));
+        // Pod name now derives from the generated job name.
+        job_name.map(job::pod_name_regex)
     }
 
     fn get_namespace(&self) -> Option<String> {
diff --git a/src/tools/genpolicy/src/daemon_set.rs b/src/tools/genpolicy/src/daemon_set.rs
index d5f780abd3d728758f8b7aa1d7dd534e16ba45d8..64d8f3defacc9e21d2f7eb03291362ede72c9a8c 100644
--- a/src/tools/genpolicy/src/daemon_set.rs
+++ b/src/tools/genpolicy/src/daemon_set.rs
@@ -83,7 +83,9 @@ impl yaml::K8sResource for DaemonSet {
     }
 
     fn get_sandbox_name(&self) -> Option<String> {
-        None
+        // https://github.com/kubernetes/kubernetes/blob/b35c5c0a301d326fdfa353943fca077778544ac6/pkg/controller/daemon/daemon_controller.go#L1045
+        let suffix = yaml::GENERATE_NAME_SUFFIX_REGEX;
+        yaml::name_regex_from_meta(&self.metadata).map(|prefix| format!("{prefix}-{suffix}"))
     }
 
     fn get_namespace(&self) -> Option<String> {
diff --git a/src/tools/genpolicy/src/deployment.rs b/src/tools/genpolicy/src/deployment.rs
index 86c9aa56763e968c32cf0f95a56d4c4d140b5c25..b4baa9e8a78b79b424b0b41ee4f074a388aca75a 100644
--- a/src/tools/genpolicy/src/deployment.rs
+++ b/src/tools/genpolicy/src/deployment.rs
@@ -81,7 +81,11 @@ impl yaml::K8sResource for Deployment {
     }
 
     fn get_sandbox_name(&self) -> Option<String> {
-        None
+        // Deployment name - pod template hash - suffix
+        // https://github.com/kubernetes/kubernetes/blob/b35c5c0a301d326fdfa353943fca077778544ac6/pkg/controller/deployment/sync.go#L201
+        let suffix = yaml::GENERATE_NAME_SUFFIX_REGEX;
+        yaml::name_regex_from_meta(&self.metadata)
+            .map(|prefix| format!("{prefix}-{suffix}-{suffix}"))
     }
 
     fn get_namespace(&self) -> Option<String> {
diff --git a/src/tools/genpolicy/src/job.rs b/src/tools/genpolicy/src/job.rs
index 330cc894ab99a470d836b55b51717da1168d09d5..efa98a1577a9c06060bfe3d029edfb68d8c64a1d 100644
--- a/src/tools/genpolicy/src/job.rs
+++ b/src/tools/genpolicy/src/job.rs
@@ -55,7 +55,8 @@ impl yaml::K8sResource for Job {
     }
 
     fn get_sandbox_name(&self) -> Option<String> {
-        None
+        let job_name = yaml::name_regex_from_meta(&self.metadata);
+        job_name.map(pod_name_regex)
     }
 
     fn get_namespace(&self) -> Option<String> {
@@ -122,3 +123,12 @@ impl yaml::K8sResource for Job {
         yaml::get_sysctls(&self.spec.template.spec.securityContext)
     }
 }
+
+pub fn pod_name_regex(job_name: String) -> String {
+    // Job name - optional index - generateNameSuffix
+    // https://github.com/kubernetes/kubernetes/blob/b35c5c0a301d326fdfa353943fca077778544ac6/pkg/controller/job/job_controller.go#L1767
+    // https://github.com/kubernetes/kubernetes/blob/b35c5c0a301d326fdfa353943fca077778544ac6/pkg/controller/job/indexed_job_utils.go#L501
+    // TODO(burgerdev): does not handle long names correctly!
+    let suffix = yaml::GENERATE_NAME_SUFFIX_REGEX;
+    format!("{job_name}(-[0-9]+)?-{suffix}")
+}
diff --git a/src/tools/genpolicy/src/obj_meta.rs b/src/tools/genpolicy/src/obj_meta.rs
index b5911f9ed135e3ffcf935b7b317e81aea1da00f5..7a00f61555883354e8304d7ef4268f0ce11bebff 100644
--- a/src/tools/genpolicy/src/obj_meta.rs
+++ b/src/tools/genpolicy/src/obj_meta.rs
@@ -17,7 +17,7 @@ pub struct ObjectMeta {
     pub name: Option<String>,
 
     #[serde(skip_serializing_if = "Option::is_none")]
-    generateName: Option<String>,
+    pub generateName: Option<String>,
 
     #[serde(skip_serializing_if = "Option::is_none")]
     labels: Option<BTreeMap<String, String>>,
diff --git a/src/tools/genpolicy/src/pod.rs b/src/tools/genpolicy/src/pod.rs
index 709c2bc37d9bc1984a4d52ff418708756126b05b..35045d8d86956ba47f2993a654756fc601eff941 100644
--- a/src/tools/genpolicy/src/pod.rs
+++ b/src/tools/genpolicy/src/pod.rs
@@ -850,11 +850,7 @@ impl yaml::K8sResource for Pod {
     }
 
     fn get_sandbox_name(&self) -> Option<String> {
-        let name = self.metadata.get_name();
-        if !name.is_empty() {
-            return Some(name);
-        }
-        panic!("No pod name.");
+        yaml::name_regex_from_meta(&self.metadata)
     }
 
     fn get_namespace(&self) -> Option<String> {
diff --git a/src/tools/genpolicy/src/policy.rs b/src/tools/genpolicy/src/policy.rs
index 0b291ea2e913289926d696df57dba02f9f023509..d9641562d46efee2ea2cb0aa8eb456425de3f72b 100644
--- a/src/tools/genpolicy/src/policy.rs
+++ b/src/tools/genpolicy/src/policy.rs
@@ -1041,7 +1041,7 @@ fn get_container_annotations(
     if let Some(name) = resource.get_sandbox_name() {
         annotations
             .entry("io.kubernetes.cri.sandbox-name".to_string())
-            .or_insert(name);
+            .or_insert(format!("^{name}$"));
     }
 
     if !is_pause_container {
diff --git a/src/tools/genpolicy/src/replica_set.rs b/src/tools/genpolicy/src/replica_set.rs
index bc9374fc88494a34a682b52cfef589f0ecb03e2f..7d7ad14345129775ff013664c7315d1231c9da48 100644
--- a/src/tools/genpolicy/src/replica_set.rs
+++ b/src/tools/genpolicy/src/replica_set.rs
@@ -53,7 +53,9 @@ impl yaml::K8sResource for ReplicaSet {
     }
 
     fn get_sandbox_name(&self) -> Option<String> {
-        None
+        // https://github.com/kubernetes/kubernetes/blob/b35c5c0a301d326fdfa353943fca077778544ac6/pkg/controller/controller_utils.go#L541
+        let suffix = yaml::GENERATE_NAME_SUFFIX_REGEX;
+        yaml::name_regex_from_meta(&self.metadata).map(|prefix| format!("{prefix}-{suffix}"))
     }
 
     fn get_namespace(&self) -> Option<String> {
diff --git a/src/tools/genpolicy/src/replication_controller.rs b/src/tools/genpolicy/src/replication_controller.rs
index 122a66ad687ae783296fbd808a38e40c843df95b..43ebbfde6829b16b96a81aa33b78608ea15bdb4c 100644
--- a/src/tools/genpolicy/src/replication_controller.rs
+++ b/src/tools/genpolicy/src/replication_controller.rs
@@ -55,7 +55,10 @@ impl yaml::K8sResource for ReplicationController {
     }
 
     fn get_sandbox_name(&self) -> Option<String> {
-        None
+        // https://github.com/kubernetes/kubernetes/blob/b35c5c0a301d326fdfa353943fca077778544ac6/pkg/controller/controller_utils.go#L541
+        // https://github.com/kubernetes/kubernetes/blob/b35c5c0a301d326fdfa353943fca077778544ac6/pkg/controller/replication/replication_controller.go#L47-L50
+        let suffix = yaml::GENERATE_NAME_SUFFIX_REGEX;
+        yaml::name_regex_from_meta(&self.metadata).map(|prefix| format!("{prefix}-{suffix}"))
     }
 
     fn get_namespace(&self) -> Option<String> {
diff --git a/src/tools/genpolicy/src/stateful_set.rs b/src/tools/genpolicy/src/stateful_set.rs
index 47c9f40acafb818985aa4fecfda652904f00d740..cb80088c8487523d89f08bdae47acc61f8884007 100644
--- a/src/tools/genpolicy/src/stateful_set.rs
+++ b/src/tools/genpolicy/src/stateful_set.rs
@@ -103,7 +103,8 @@ impl yaml::K8sResource for StatefulSet {
     }
 
     fn get_sandbox_name(&self) -> Option<String> {
-        None
+        // https://github.com/kubernetes/kubernetes/blob/b35c5c0a301d326fdfa353943fca077778544ac6/pkg/controller/statefulset/stateful_set_utils.go#L113
+        yaml::name_regex_from_meta(&self.metadata).map(|prefix| format!("{prefix}-[0-9]+"))
     }
 
     fn get_namespace(&self) -> Option<String> {
diff --git a/src/tools/genpolicy/src/yaml.rs b/src/tools/genpolicy/src/yaml.rs
index cf0b216d8610ccfc20e52146b250d92671ebfc14..8c527db602d6c9241025b052ba13cb9c86d343c4 100644
--- a/src/tools/genpolicy/src/yaml.rs
+++ b/src/tools/genpolicy/src/yaml.rs
@@ -15,6 +15,7 @@ use crate::job;
 use crate::list;
 use crate::mount_and_storage;
 use crate::no_policy;
+use crate::obj_meta::ObjectMeta;
 use crate::pod;
 use crate::policy;
 use crate::pvc;
@@ -403,3 +404,15 @@ pub fn get_sysctls(security_context: &Option<pod::PodSecurityContext>) -> Vec<po
     }
     vec![]
 }
+
+/// Constructs a non-anchored regex for an object according to k8s naming conventions:
+/// 1. If the name field is set, return that literally.
+/// 2. If name is unset but generateName is set, return regex that matches generateName and a random suffix.
+/// 3. Otherwise, return None. This object is not considered valid by the k8s API server!
+pub fn name_regex_from_meta(meta: &ObjectMeta) -> Option<String> {
+        let generateName = meta.generateName.clone().map(|prefix| format!("{prefix}{GENERATE_NAME_SUFFIX_REGEX}"));
+        meta.name.clone().or(generateName)
+}
+
+// https://github.com/kubernetes/kubernetes/blob/b35c5c0a301d326fdfa353943fca077778544ac6/staging/src/k8s.io/apimachinery/pkg/util/rand/rand.go#L81-L83
+pub const GENERATE_NAME_SUFFIX_REGEX: &str = "[bcdfghjklmnpqrstvwxz2456789]+";
