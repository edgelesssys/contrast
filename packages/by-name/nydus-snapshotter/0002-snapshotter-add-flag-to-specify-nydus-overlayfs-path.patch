From b31f8a7a5e1e162d93383bee2f8fbf5554113142 Mon Sep 17 00:00:00 2001
From: Paul Meyer <49727155+katexochen@users.noreply.github.com>
Date: Tue, 3 Sep 2024 16:05:38 +0200
Subject: [PATCH 2/2] snapshotter: add flag to specify nydus-overlayfs path

This allows installation of multiple nydus-overlayfs versions on the same machine.

Signed-off-by: Paul Meyer <49727155+katexochen@users.noreply.github.com>
---
 config/config.go         | 11 +++++++----
 internal/flags/flags.go  |  6 ++++++
 snapshot/mount_option.go | 17 +++++++++++++++--
 snapshot/snapshot.go     | 11 ++++++++++-
 4 files changed, 38 insertions(+), 7 deletions(-)

diff --git a/config/config.go b/config/config.go
index 143b77f..0e9c43a 100644
--- a/config/config.go
+++ b/config/config.go
@@ -158,9 +158,10 @@ type ImageConfig struct {
 // Configure containerd snapshots interfaces and how to process the snapshots
 // requests from containerd
 type SnapshotConfig struct {
-	EnableNydusOverlayFS bool `toml:"enable_nydus_overlayfs"`
-	EnableKataVolume     bool `toml:"enable_kata_volume"`
-	SyncRemove           bool `toml:"sync_remove"`
+	EnableNydusOverlayFS bool   `toml:"enable_nydus_overlayfs"`
+	NydusOverlayFSPath   string `toml:"nydus_overlayfs_path"`
+	EnableKataVolume     bool   `toml:"enable_kata_volume"`
+	SyncRemove           bool   `toml:"sync_remove"`
 }
 
 // Configure cache manager that manages the cache files lifecycle
@@ -357,7 +358,9 @@ func ParseParameters(args *flags.Args, cfg *SnapshotterConfig) error {
 	// empty
 
 	// --- snapshot configuration
-	// empty
+	if args.NydusOverlayFSPath != "" {
+		cfg.SnapshotsConfig.NydusOverlayFSPath = args.NydusOverlayFSPath
+	}
 
 	// --- metrics configuration
 	// empty
diff --git a/internal/flags/flags.go b/internal/flags/flags.go
index ef28387..4358f6c 100644
--- a/internal/flags/flags.go
+++ b/internal/flags/flags.go
@@ -19,6 +19,7 @@ type Args struct {
 	RootDir               string
 	NydusdPath            string
 	NydusImagePath        string
+	NydusOverlayFSPath    string
 	DaemonMode            string
 	FsDriver              string
 	LogLevel              string
@@ -68,6 +69,11 @@ func buildFlags(args *Args) []cli.Flag {
 			Destination: &args.NydusdConfigPath,
 			DefaultText: constant.DefaultNydusDaemonConfigPath,
 		},
+		&cli.StringFlag{
+			Name:        "nydus-overlayfs-path",
+			Usage:       "path of nydus-overlayfs or name of binary from $PATH, defaults to 'nydus-overlayfs'",
+			Destination: &args.NydusOverlayFSPath,
+		},
 		&cli.StringFlag{
 			Name:        "daemon-mode",
 			Usage:       "nydusd daemon working mode, possible values: \"dedicated\", \"multiple\", \"shared\" or \"none\". \"multiple\" is an alias of \"dedicated\" and will be deprecated in v1.0",
diff --git a/snapshot/mount_option.go b/snapshot/mount_option.go
index d0161e7..b438364 100644
--- a/snapshot/mount_option.go
+++ b/snapshot/mount_option.go
@@ -94,9 +94,15 @@ func (o *snapshotter) remoteMountWithExtraOptions(ctx context.Context, s storage
 	opt := fmt.Sprintf("extraoption=%s", base64.StdEncoding.EncodeToString(no))
 	overlayOptions = append(overlayOptions, opt)
 
+	mountType := "fuse.nydus-overlayfs"
+	if o.nydusOverlayFSPath != "" {
+		log.G(ctx).Infof("Using nydus-overlayfs from path: %s", o.nydusOverlayFSPath)
+		mountType = fmt.Sprintf("fuse.%s", o.nydusOverlayFSPath)
+	}
+
 	return []mount.Mount{
 		{
-			Type:    "fuse.nydus-overlayfs",
+			Type:    mountType,
 			Source:  "overlay",
 			Options: overlayOptions,
 		},
@@ -136,9 +142,16 @@ func (o *snapshotter) mountWithKataVolume(ctx context.Context, id string, overla
 
 	if hasVolume {
 		log.G(ctx).Debugf("fuse.nydus-overlayfs mount options %v", overlayOptions)
+
+		mountType := "fuse.nydus-overlayfs"
+		if o.nydusOverlayFSPath != "" {
+			log.G(ctx).Infof("Using nydus-overlayfs from path: %s", o.nydusOverlayFSPath)
+			mountType = fmt.Sprintf("fuse.%s", o.nydusOverlayFSPath)
+		}
+
 		mounts := []mount.Mount{
 			{
-				Type:    "fuse.nydus-overlayfs",
+				Type:    mountType,
 				Source:  "overlay",
 				Options: overlayOptions,
 			},
diff --git a/snapshot/snapshot.go b/snapshot/snapshot.go
index 416e1e7..fdc7634 100644
--- a/snapshot/snapshot.go
+++ b/snapshot/snapshot.go
@@ -55,6 +55,7 @@ type snapshotter struct {
 	fs                   *filesystem.Filesystem
 	cgroupManager        *cgroup.Manager
 	enableNydusOverlayFS bool
+	nydusOverlayFSPath   string
 	enableKataVolume     bool
 	syncRemove           bool
 	cleanupOnClose       bool
@@ -291,6 +292,7 @@ func NewSnapshotter(ctx context.Context, cfg *config.SnapshotterConfig) (snapsho
 		fs:                   nydusFs,
 		cgroupManager:        cgroupMgr,
 		enableNydusOverlayFS: cfg.SnapshotsConfig.EnableNydusOverlayFS,
+		nydusOverlayFSPath:   cfg.SnapshotsConfig.NydusOverlayFSPath,
 		enableKataVolume:     cfg.SnapshotsConfig.EnableKataVolume,
 		cleanupOnClose:       cfg.CleanupOnClose,
 	}, nil
@@ -877,9 +879,16 @@ func (o *snapshotter) mountProxy(ctx context.Context, s storage.Snapshot) ([]mou
 		overlayOptions = append(overlayOptions, options...)
 	}
 	log.G(ctx).Debugf("fuse.nydus-overlayfs mount options %v", overlayOptions)
+
+	mountType := "fuse.nydus-overlayfs"
+	if o.nydusOverlayFSPath != "" {
+		log.G(ctx).Debugf("Using nydus-overlayfs from path: %s", o.nydusOverlayFSPath)
+		mountType = fmt.Sprintf("fuse.%s", o.nydusOverlayFSPath)
+	}
+
 	mounts := []mount.Mount{
 		{
-			Type:    "fuse.nydus-overlayfs",
+			Type:    mountType,
 			Source:  "overlay",
 			Options: overlayOptions,
 		},
-- 
2.45.2

