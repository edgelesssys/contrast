name: e2e test

on:
  workflow_call:
    inputs:
      skip-undeploy:
        description: "Skip undeploy"
        type: boolean
      test-name:
        description: "Test Name"
        type: string
      platform:
        description: "Platform"
        type: string
      runner:
        description: "Runner"
        type: string
      self-hosted:
        description: "Self Hosted"
        type: boolean

env:
  container_registry: ghcr.io/edgelesssys
  azure_resource_group: contrast-ci
  DO_NOT_TRACK: 1

jobs:
  test:
    name: "${{ inputs.test-name }}"
    runs-on: ${{ inputs.runner }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - if: ${{ !inputs.self-hosted }}
        uses: ./.github/actions/setup_nix
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          cachixToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Log in to ghcr.io Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - if: ${{ !inputs.self-hosted }}
        name: Login to Azure
        uses: azure/login@a65d910e8af852a8061c627c456678983e180302 # v2.2.0
        with:
          creds: ${{ secrets.CONTRAST_CI_INFRA_AZURE }}
      - uses: nicknovitski/nix-develop@8b263330c8f0999d6ce564372b099f00af6f8e8a # v1.1.1
      - name: Create justfile.env
        run: |
          cat <<EOF > justfile.env
          container_registry=${{ env.container_registry }}
          azure_resource_group=${{ env.azure_resource_group }}
          EOF
      - if: ${{ !inputs.self-hosted }}
        name: Get credentials for CI cluster
        run: |
          just get-credentials
      - if: ${{ !inputs.self-hosted }}
        name: Set sync environment
        run: |
          sync_ip=$(kubectl get svc sync -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "SYNC_ENDPOINT=http://$sync_ip:8080" | tee -a "$GITHUB_ENV"
          sync_uuid=$(kubectl get configmap sync-server-fifo -o jsonpath='{.data.uuid}')
          echo "SYNC_FIFO_UUID=$sync_uuid" | tee -a "$GITHUB_ENV"
      - name: Build and prepare deployments
        run: |
          just coordinator initializer port-forwarder openssl cryptsetup service-mesh-proxy node-installer ${{ inputs.platform }}
      - name: E2E Test
        run: |
          nix run .#scripts.get-logs workspace/e2e.namespace &
          nix shell -L .#contrast.e2e --command ${{ inputs.test-name }}.test -test.v \
            --image-replacements workspace/just.containerlookup \
            --namespace-file workspace/e2e.namespace \
            --platform ${{ inputs.platform }} \
            --skip-undeploy="${{ inputs.skip-undeploy && 'true' || 'false' }}"
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: e2e_pod_logs-${{ inputs.platform }}-${{ inputs.test-name }}
          path: workspace/namespace-logs
      - name: Notify teams channel of failure
        if: ${{ failure() && github.event_name == 'schedule' && github.run_attempt == 1 }}
        uses: ./.github/actions/post_to_teams
        with:
          webhook: ${{ secrets.TEAMS_CI_WEBHOOK }}
          title: "${{ inputs.test-name }} failed"
          message: "e2e test ${{ inputs.test-name }} failed"
          additionalFields: '[{"title": "Platform", "value": "${{ inputs.platform }}"}]'
      - name: Cleanup
        if: cancelled() && !inputs.skip-undeploy
        run: |
          kubectl delete ns "$(cat workspace/e2e.namespace)" --timeout 5m
