name: release

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version to release (e.g. v1.2.3)
        required: true
      kind:
        description: Release kind
        type: choice
        options: [minor, patch]
        required: true
        default: minor
      overwrite_published_release:
        description: Tick this box if you want to overwrite a published release and have a good reason for doing so.
        type: boolean
        required: false
        default: false
      checkout_main_ref:
        description: Checkout this git ref as main branch (some workflows run on this state)
        type: string
        required: false
        default: main

env:
  container_registry: ghcr.io/edgelesssys
  azure_resource_group: contrast-ci
  DO_NOT_TRACK: 1

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  process-inputs:
    name: Process inputs
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    env:
      FULL_VERSION: ${{ inputs.version }}
    outputs:
      WITHOUT_V: ${{ steps.version-info.outputs.WITHOUT_V }}
      PART_MAJOR: ${{ steps.version-info.outputs.PART_MAJOR }}
      PART_MINOR: ${{ steps.version-info.outputs.PART_MINOR }}
      PART_PATCH: ${{ steps.version-info.outputs.PART_PATCH }}
      MAJOR: ${{ steps.version-info.outputs.MAJOR }}
      MAJOR_MINOR: ${{ steps.version-info.outputs.MAJOR_MINOR }}
      MAJOR_MINOR_PATCH: ${{ steps.version-info.outputs.MAJOR_MINOR_PATCH }}
      RELEASE_BRANCH: ${{ steps.version-info.outputs.RELEASE_BRANCH }}
      WORKING_BRANCH: ${{ steps.version-info.outputs.WORKING_BRANCH }}
      NEXT_MINOR: ${{ steps.version-info.outputs.NEXT_MINOR }}
      NEXT_MINOR_PRE_WITHOUT_V: ${{ steps.version-info.outputs.NEXT_MINOR_PRE_WITHOUT_V }}
      NEXT_PATCH_PRE_WITHOUT_V: ${{ steps.version-info.outputs.NEXT_PATCH_PRE_WITHOUT_V }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Working branch
        run: |
          echo "WORKING_BRANCH=$(git branch --show-current)" | tee -a "$GITHUB_ENV"
      - name: Verify minor version bump
        if: inputs.kind == 'minor'
        run: |
          if [[ ! "${FULL_VERSION}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Version must be in the form of vX.Y.Z"
            exit 1
          fi
      - name: Verify patch version bump
        if: inputs.kind == 'patch'
        run: |
          if [[ ! "${FULL_VERSION}" =~ ^v[0-9]+\.[0-9]+\.[1-9]+$ ]]; then
            echo "Version must be in the form of vX.Y.Z, where Z > 0"
            exit 1
          fi
      - name: Verify temporary branch for minor release
        run: |
          if [[ ! "${WORKING_BRANCH}" =~ ^tmp/v[0-9]+\.[0-9]+\.[0-9] ]]; then
            echo "Workflow can only be triggered from a temporary branch in the form of tmp/vX.Y.Z"
            exit 1
          fi
      - name: Extract version info
        id: version-info
        run: |
          WITHOUT_V=${FULL_VERSION#v}
          PART_MAJOR=${WITHOUT_V%%.*}
          PART_MINOR=${WITHOUT_V#*.}
          PART_MINOR=${PART_MINOR%%.*}
          PART_PATCH=${WITHOUT_V##*.}
          RELEASE_BRANCH=release/v${PART_MAJOR}.${PART_MINOR}
          NEXT_MINOR=${PART_MAJOR}.$((PART_MINOR + 1)).0
          NEXT_MINOR_PRE_WITHOUT_V=${PART_MAJOR}.$((PART_MINOR + 1)).0-pre
          NEXT_PATCH_PRE_WITHOUT_V=${PART_MAJOR}.${PART_MINOR}.$((PART_PATCH + 1))-pre
          {
            echo "WITHOUT_V=${WITHOUT_V}"
            echo "PART_MAJOR=${PART_MAJOR}"
            echo "PART_MINOR=${PART_MINOR}"
            echo "PART_PATCH=${PART_PATCH}"
            echo "MAJOR=${PART_MAJOR}"
            echo "MAJOR_MINOR=${PART_MAJOR}.${PART_MINOR}"
            echo "MAJOR_MINOR_PATCH=${PART_MAJOR}.${PART_MINOR}.${PART_PATCH}"
            echo "RELEASE_BRANCH=${RELEASE_BRANCH}"
            echo "WORKING_BRANCH=${WORKING_BRANCH}"
            echo "NEXT_MINOR=${NEXT_MINOR}"
            echo "NEXT_MINOR_PRE_WITHOUT_V=${NEXT_MINOR_PRE_WITHOUT_V}"
            echo "NEXT_PATCH_PRE_WITHOUT_V=${NEXT_PATCH_PRE_WITHOUT_V}"
          } | tee -a "$GITHUB_OUTPUT"
          echo "RELEASE_BRANCH=${RELEASE_BRANCH}" | tee -a "$GITHUB_ENV"
      - name: Don't overwrite published releases
        if: (! inputs.overwrite_published_release)
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          is_draft=$(gh release view ${{ inputs.version }} --json isDraft -q .isDraft || true)
          # If the release is not yet published, is_draft will either be "true" or empty.
          if [[ "${is_draft}" == "false" ]]; then
            echo "::error::Release ${{ inputs.version }} is already published."
            exit 1
          fi

  update-main:
    name: Update main branch
    runs-on: ubuntu-22.04
    needs: [process-inputs, release]
    permissions:
      contents: write
    env:
      RELEASE_BRANCH: ${{ needs.process-inputs.outputs.RELEASE_BRANCH }}
      WORKING_BRANCH: ${{ needs.process-inputs.outputs.WORKING_BRANCH }}
    steps:
      - name: Checkout working branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ needs.process-inputs.outputs.WORKING_BRANCH }}
          path: contrast-working
      - name: Checkout main
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.checkout_main_ref }}
          path: contrast-main
      - uses: ./contrast-working/.github/actions/setup_nix
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          cachixToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Configure git
        run: |
          git config --global user.name "edgelessci"
          git config --global user.email "edgelessci@users.noreply.github.com"
      - name: Create docs release
        if: inputs.kind == 'minor'
        working-directory: contrast-main/docs
        run: |
          nix run .#yarn install
          nix run .#yarn docusaurus docs:version ${{ needs.process-inputs.outputs.MAJOR_MINOR }}
          git add .
          git commit -am "docs: release ${{ needs.process-inputs.outputs.MAJOR_MINOR }}"
          # Clean up auxiliary files, so next steps run on a clean tree
          git clean -fx :/
      - name: Download image replacements file (from release branch)
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: image-replacements
      - name: Update release urls in docs with tags
        working-directory: contrast-main
        env:
          MAJOR_MINOR: ${{ needs.process-inputs.outputs.MAJOR_MINOR }}
          VERSION: ${{ inputs.version }}
        run: nix run .#scripts.update-release-urls
      - name: Commit updated docs
        working-directory: contrast-main
        run: |
          git add docs/versioned_docs/version-${{ needs.process-inputs.outputs.MAJOR_MINOR }}
          git commit -m "docs: update release download urls"
          git clean -fx :/
      - name: Download release artifacts (from release branch)
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: contrast-release-artifacts
          path: ./contrast-main
      - name: Update contrast-releases.json with new release
        working-directory: contrast-main
        env:
          VERSION: ${{ inputs.version }}
        run: nix run .#scripts.update-contrast-releases
      - name: Commit updated contrast-releases.json
        working-directory: contrast-main
        run: |
          git add ./packages/contrast-releases.json
          git commit -m "packages/contrast-releases: add ${{ needs.process-inputs.outputs.MAJOR_MINOR_PATCH }}"
          git clean -fx :/
      - name: Bump flake version to post release patch pre-version
        if: inputs.kind == 'minor'
        id: bump
        uses: ./contrast-working/.github/actions/bump_version # Run action from working branch!
        with:
          version: ${{ needs.process-inputs.outputs.NEXT_MINOR_PRE_WITHOUT_V }}
          working-directory: contrast-main
          commit: false
      - name: Create PR
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          title: Post ${{ needs.process-inputs.outputs.WITHOUT_V }} release updates to main
          body: |
            Updating main as part of the ${{ needs.process-inputs.outputs.WITHOUT_V }} release.
            Only merge after the release is published.
          commit-message: ${{ steps.bump.outputs.commit-msg }}
          base: main
          draft: false
          labels: "no changelog"
          branch: automated/update-main-after-${{ needs.process-inputs.outputs.WORKING_BRANCH }}
          committer: edgelessci <edgelessci@users.noreply.github.com>
          author: edgelessci <edgelessci@users.noreply.github.com>
          token: ${{ secrets.NUNKI_CI_COMMIT_PUSH_PR }}
          path: ./contrast-main

  release:
    name: Build and push artifacts, create release
    runs-on: ubuntu-22.04
    needs: process-inputs
    permissions:
      contents: write
      packages: write
    env:
      RELEASE_BRANCH: ${{ needs.process-inputs.outputs.RELEASE_BRANCH }}
      WORKING_BRANCH: ${{ needs.process-inputs.outputs.WORKING_BRANCH }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ needs.process-inputs.outputs.WORKING_BRANCH }}
      - uses: ./.github/actions/setup_nix
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          cachixToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Log in to ghcr.io Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure git
        run: |
          git config --global user.name "edgelessci"
          git config --global user.email "edgelessci@users.noreply.github.com"
      - name: Bump flake version to release version
        uses: ./.github/actions/bump_version
        with:
          version: ${{ needs.process-inputs.outputs.WITHOUT_V }}
          commit: true
      - name: Push containers
        run: |
          coordinatorImg=$(nix run .#containers.push-coordinator -- "$container_registry/contrast/coordinator")
          coordinatorEnterpriseImg=$(nix run .#containers.push-coordinator-enterprise -- "$container_registry/contrast/coordinator")
          nodeInstallerMsftImg=$(nix run .#containers.push-node-installer-microsoft -- "$container_registry/contrast/node-installer-microsoft")
          nodeInstallerKataImg=$(nix run .#containers.push-node-installer-kata -- "$container_registry/contrast/node-installer-kata")
          nodeInstallerKataGPUImg=$(nix run .#containers.push-node-installer-kata-gpu -- "$container_registry/contrast/node-installer-kata")
          initializerImg=$(nix run .#containers.push-initializer -- "$container_registry/contrast/initializer")
          serviceMeshImg=$(nix run .#containers.push-service-mesh-proxy -- "$container_registry/contrast/service-mesh-proxy")
          tardevSnapshotterImg=$(nix run .#containers.push-tardev-snapshotter -- "$container_registry/contrast/tardev-snapshotter")
          nydusSnapshotterImg=$(nix run .#containers.push-nydus-snapshotter -- "$container_registry/contrast/nydus-snapshotter")
          nydusPullImg=$(nix run .#containers.push-nydus-pull -- "$container_registry/contrast/nydus-pull")
          echo "coordinatorImg=$coordinatorImg" | tee -a "$GITHUB_ENV"
          echo "coordinatorEnterpriseImg=$coordinatorEnterpriseImg" | tee -a "$GITHUB_ENV"
          echo "nodeInstallerMsftImg=$nodeInstallerMsftImg" | tee -a "$GITHUB_ENV"
          echo "nodeInstallerKataImg=$nodeInstallerKataImg" | tee -a "$GITHUB_ENV"
          echo "nodeInstallerKataGPUImg=$nodeInstallerKataGPUImg" | tee -a "$GITHUB_ENV"
          echo "initializerImg=$initializerImg" | tee -a "$GITHUB_ENV"
          echo "serviceMeshImg=$serviceMeshImg" | tee -a "$GITHUB_ENV"
          echo "tardevSnapshotterImg=$tardevSnapshotterImg" | tee -a "$GITHUB_ENV"
          echo "nydusSnapshotterImg=$nydusSnapshotterImg" | tee -a "$GITHUB_ENV"
          echo "nydusPullImg=$nydusPullImg" | tee -a "$GITHUB_ENV"
      - name: Add tags to container images
        run: |
          # Insert a tag into a container image name.
          tag() {
            tag="$1"
            front="${2%@*}"
            back="${2#*@}"
            printf "%s:%s@%s" "$front" "$tag" "$back"
          }

          # Insert the Contrast version as tag into a container image name.
          tagContrast() {
            tag ${{ inputs.version }} "$@"
          }

          echo "coordinatorImgTagged=$(tagContrast "$coordinatorImg")" | tee -a "$GITHUB_ENV"
          echo "nodeInstallerMsftImgTagged=$(tagContrast "$nodeInstallerMsftImg")" | tee -a "$GITHUB_ENV"
          echo "nodeInstallerKataImgTagged=$(tagContrast "$nodeInstallerKataImg")" | tee -a "$GITHUB_ENV"
          echo "nodeInstallerKataGPUImgTagged=$(tagContrast "$nodeInstallerKataGPUImg")" | tee -a "$GITHUB_ENV"
          echo "initializerImgTagged=$(tagContrast "$initializerImg")" | tee -a "$GITHUB_ENV"
          echo "serviceMeshImgTagged=$(tagContrast "$serviceMeshImg")" | tee -a "$GITHUB_ENV"
          echo "nydusPullImgTagged=$(tagContrast "$nydusPullImg")" | tee -a "$GITHUB_ENV"

          enterpriseVer="${{ inputs.version }}-enterprise"
          echo "coordinatorEnterpriseImgTagged=$(tag "$enterpriseVer" "$coordinatorEnterpriseImg")" | tee -a "$GITHUB_ENV"

          tardevVer=$(nix eval --impure --raw --expr "(builtins.getFlake \"git+file://$(pwd)?shallow=1\").outputs.legacyPackages.x86_64-linux.microsoft.tardev-snapshotter.version")
          echo "tardevSnapshotterImgTagged=$(tag "$tardevVer" "$tardevSnapshotterImg")" | tee -a "$GITHUB_ENV"

          nydusVer=$(nix eval --impure --raw --expr "(builtins.getFlake \"git+file://$(pwd)?shallow=1\").outputs.legacyPackages.x86_64-linux.nydus-snapshotter.version")
          echo "nydusSnapshotterImgTagged=$(tag "$nydusVer" "$nydusSnapshotterImg")" | tee -a "$GITHUB_ENV"
      - name: Create file with image replacements
        run: |
          cat > image-replacements.txt <<EOF
          ghcr.io/edgelesssys/contrast/coordinator:latest=$coordinatorImgTagged
          ghcr.io/edgelesssys/contrast/initializer:latest=$initializerImgTagged
          ghcr.io/edgelesssys/contrast/service-mesh-proxy:latest=$serviceMeshImgTagged
          ghcr.io/edgelesssys/contrast/node-installer-microsoft:latest=$nodeInstallerMsftImgTagged
          ghcr.io/edgelesssys/contrast/node-installer-kata:latest=$nodeInstallerKataImgTagged
          ghcr.io/edgelesssys/contrast/node-installer-kata-gpu:latest=$nodeInstallerKataGPUImgTagged
          ghcr.io/edgelesssys/contrast/tardev-snapshotter:latest=$tardevSnapshotterImgTagged
          ghcr.io/edgelesssys/contrast/nydus-snapshotter:latest=$nydusSnapshotterImgTagged
          ghcr.io/edgelesssys/contrast/nydus-pull:latest=$nydusPullImgTagged
          EOF
      - name: Create file with enterprise image replacements
        run: |
          cat > image-replacements-enterprise.txt <<EOF
          ghcr.io/edgelesssys/contrast/coordinator:latest=$coordinatorEnterpriseImgTagged
          ghcr.io/edgelesssys/contrast/initializer:latest=$initializerImgTagged
          ghcr.io/edgelesssys/contrast/service-mesh-proxy:latest=$serviceMeshImgTagged
          ghcr.io/edgelesssys/contrast/node-installer-microsoft:latest=$nodeInstallerMsftImgTagged
          ghcr.io/edgelesssys/contrast/node-installer-kata:latest=$nodeInstallerKataImgTagged
          ghcr.io/edgelesssys/contrast/node-installer-kata-gpu:latest=$nodeInstallerKataGPUImgTagged
          ghcr.io/edgelesssys/contrast/tardev-snapshotter:latest=$tardevSnapshotterImgTagged
          ghcr.io/edgelesssys/contrast/nydus-snapshotter:latest=$nydusSnapshotterImgTagged
          ghcr.io/edgelesssys/contrast/nydus-pull:latest=$nydusPullImgTagged
          EOF
      - name: Upload image replacement files (for main branch PR)
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: image-replacements
          path: |
            image-replacements.txt
            image-replacements-enterprise.txt
      - name: Create coordinator & coordinator enterprise resource definitions
        run: |
          mkdir -p workspace

          for edition in "" "-enterprise"; do
            nix shell .#contrast --command resourcegen \
              --image-replacements "./image-replacements${edition}.txt" \
              --add-load-balancers \
              coordinator > "workspace/coordinator${edition}.yml"
          done
      - name: Create runtime resource definitions
        run: |
          platforms=(
            "aks-clh-snp"
            "k3s-qemu-snp-gpu"
            "k3s-qemu-snp"
            "k3s-qemu-tdx"
            "metal-qemu-snp-gpu"
            "metal-qemu-snp"
            "metal-qemu-tdx"
            "rke2-qemu-tdx"
          )
          for platform in "${platforms[@]}"; do
            nix shell .#contrast --command resourcegen \
              --image-replacements ./image-replacements.txt \
              --platform "$platform" \
              runtime > "workspace/runtime-$platform.yml"
          done
      - name: Create demo resource definitions
        run: |
          nix shell .#contrast --command resourcegen \
            --image-replacements ./image-replacements.txt \
            --add-load-balancers emojivoto-sm-ingress > workspace/emojivoto-demo.yml
          nix shell .#contrast --command resourcegen \
            --image-replacements ./image-replacements.txt \
            --add-load-balancers mysql > workspace/mysql-demo.yml
      - name: Update cli assets
        run: |
          cp image-replacements.txt cli/cmd/assets/image-replacements.txt
          git add cli/cmd/assets/image-replacements.txt
          git diff --staged --quiet || git commit -m "release: update cli assets"
      - name: Build CLI
        run: |
          nix build -L .#contrast-cli-release --out-link workspace/contrast
      - name: Update cli assets (enterprise)
        run: |
          cp image-replacements-enterprise.txt cli/cmd/assets/image-replacements.txt
          git add cli/cmd/assets/image-replacements.txt
          git diff --staged --quiet || git commit -m "release: update cli assets (enterprise)"
      - name: Build CLI
        run: |
          nix build -L .#contrast-enterprise-cli-release --out-link workspace/contrast-enterprise
      - name: Upload release artifacts (for main branch PR)
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: contrast-release-artifacts
          # Keep the LICENSE file! It isn't used, but ensures the paths of the other artifacts aren't stripped, see
          # https://github.com/actions/upload-artifact/blob/6027e3dd177782cd8ab9af838c04fd81a07f1d47/README.md?plain=1#L187
          path: |
            LICENSE
            workspace/contrast-cli/bin/contrast
            workspace/contrast-enterprise-cli/bin/contrast-enterprise
            workspace/coordinator*.yml
            workspace/runtime-*.yml
            workspace/emojivoto-demo.yml
            workspace/mysql-demo.yml
      - name: Create draft release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        with:
          draft: true
          generate_release_notes: true
          tag_name: ${{ inputs.version }}
          target_commitish: ${{ needs.process-inputs.outputs.WORKING_BRANCH }}
          fail_on_unmatched_files: true
          files: |
            workspace/contrast-cli/bin/contrast
            workspace/contrast-enterprise-cli/bin/contrast-enterprise
            workspace/coordinator*.yml
            workspace/runtime-*.yml
            workspace/emojivoto-demo.yml
            workspace/mysql-demo.yml
      - name: Reset temporary changes
        run: |
          git reset --hard ${{ needs.process-inputs.outputs.WORKING_BRANCH }}
      - name: Bump flake version to post release patch pre-version
        uses: ./.github/actions/bump_version
        with:
          version: ${{ needs.process-inputs.outputs.NEXT_PATCH_PRE_WITHOUT_V }}
          commit: true

  test:
    strategy:
      matrix:
        enterprise: [false, true]
        platform:
          - name: AKS-CLH-SNP
            runner: ubuntu-22.04
            self-hosted: false
          - name: K3s-QEMU-SNP
            runner: SNP
            self-hosted: true
          - name: K3s-QEMU-SNP-GPU
            runner: SNP-GPU
            self-hosted: true
          - name: K3s-QEMU-TDX
            runner: TDX
            self-hosted: true
      fail-fast: false
    name: "Test ${{ matrix.enterprise && 'enterprise ' || '' }}on ${{ matrix.platform.name }}"
    runs-on: ${{ matrix.platform.runner }}
    permissions:
      # Job needs content:write to see draft releases.
      contents: write
      packages: read
    needs: release
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/setup_nix
        if: (!matrix.platform.self-hosted)
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          cachixToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Log in to ghcr.io Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Azure
        if: (!matrix.platform.self-hosted)
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2.3.0
        with:
          creds: ${{ secrets.CONTRAST_CI_INFRA_AZURE }}
      - uses: nicknovitski/nix-develop@9be7cfb4b10451d3390a75dc18ad0465bed4932a # v1.2.1
        if: (!matrix.platform.self-hosted)
      - name: Create justfile.env
        run: |
          cat <<EOF > justfile.env
          container_registry=${{ env.container_registry }}
          azure_resource_group=${{ env.azure_resource_group }}
          default_platform=${{ matrix.platform.name }}
          EOF
      - name: Get credentials for CI cluster
        if: (!matrix.platform.self-hosted)
        run: |
          just get-credentials
      - name: Set sync environment
        if: (!matrix.platform.self-hosted)
        run: |
          sync_ip=$(kubectl get svc sync -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "SYNC_ENDPOINT=http://$sync_ip:8080" | tee -a "$GITHUB_ENV"
          sync_uuid=$(kubectl get configmap sync-server-fifo -o jsonpath='{.data.uuid}')
          echo "SYNC_FIFO_UUID=$sync_uuid" | tee -a "$GITHUB_ENV"
      - name: E2E Test
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          nix shell -L .#contrast.e2e --command release.test \
            -test.v \
            --tag ${{ inputs.version }} \
            --platform ${{ matrix.platform.name }} \
            ${{ matrix.enterprise && '--enterprise' || '' }}

  create-github-stuff:
    name: Create backport label and milestone
    if: inputs.kind == 'minor'
    needs: process-inputs
    runs-on: ubuntu-22.04
    permissions:
      issues: write
      contents: read
    env:
      RELEASE_BRANCH: ${{ needs.process-inputs.outputs.RELEASE_BRANCH }}
      NEXT_MINOR: ${{ needs.process-inputs.outputs.NEXT_MINOR }}
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ needs.process-inputs.outputs.WORKING_BRANCH }}
      - name: Create backport label
        run: |
          gh label create "backport ${RELEASE_BRANCH}" --color 576F61 --force
      - name: Create milestone
        run: |
          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/edgelesssys/contrast/milestones |
            jq -r '.[] | .title' | \
            grep -xqF "v${NEXT_MINOR}" && exit 0
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/edgelesssys/contrast/milestones \
            -f title="v${NEXT_MINOR}" \
            -f state='open'
