"use strict";(self.webpackChunkcontrast_docs=self.webpackChunkcontrast_docs||[]).push([[7826],{28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var r=n(96540);const i={},o=r.createContext(i);function s(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:t},e.children)}},65886:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"howto/workload-deployment/TLS-configuration","title":"Configure TLS","description":"Contrast supports secure communication through a Contrast-specific PKI. Certificates are issued automatically based on successful attestation.","source":"@site/docs/howto/workload-deployment/TLS-configuration.md","sourceDirName":"howto/workload-deployment","slug":"/howto/workload-deployment/TLS-configuration","permalink":"/contrast/pr-preview/pr-1655/next/howto/workload-deployment/TLS-configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/edgelesssys/contrast/edit/main/docs/docs/howto/workload-deployment/TLS-configuration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Prepare deployment files","permalink":"/contrast/pr-preview/pr-1655/next/howto/workload-deployment/deployment-file-preparation"},"next":{"title":"Enable GPU support","permalink":"/contrast/pr-preview/pr-1655/next/howto/workload-deployment/GPU-configuration"}}');var i=n(74848),o=n(28453);const s={},a="Configure TLS",c={},l=[{value:"Applicability",id:"applicability",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"How-to",id:"how-to",level:2},{value:"Drop-in service mesh",id:"drop-in-service-mesh",level:3},{value:"Go integration",id:"go-integration",level:3}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components},{TabItem:n,Tabs:r}=t;return n||p("TabItem",!0),r||p("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"configure-tls",children:"Configure TLS"})}),"\n",(0,i.jsx)(t.p,{children:"Contrast supports secure communication through a Contrast-specific PKI. Certificates are issued automatically based on successful attestation."}),"\n",(0,i.jsx)(t.h2,{id:"applicability",children:"Applicability"}),"\n",(0,i.jsx)(t.p,{children:"This step is optional, but highly recommended when deploying applications with Contrast."}),"\n",(0,i.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/contrast/pr-preview/pr-1655/next/howto/cluster-setup/aks",children:"Set up cluster"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/contrast/pr-preview/pr-1655/next/howto/install-cli",children:"Install CLI"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/contrast/pr-preview/pr-1655/next/howto/workload-deployment/runtime-deployment",children:"Deploy the Contrast runtime"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/contrast/pr-preview/pr-1655/next/howto/workload-deployment/set-manifest",children:"Add Coordinator to resources"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/contrast/pr-preview/pr-1655/next/howto/workload-deployment/deployment-file-preparation",children:"Prepare deployment files"})}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"how-to",children:"How-to"}),"\n",(0,i.jsxs)(t.p,{children:["In the initialization process, the ",(0,i.jsx)(t.code,{children:"contrast-secrets"})," shared volume (shared only within the pod VM) is populated with X.509 certificates for your workload.\nThese certificates are used by the ",(0,i.jsx)(t.a,{href:"/contrast/pr-preview/pr-1655/next/architecture/components/service-mesh",children:"Contrast Service Mesh"}),", but can also be used by your application directly."]}),"\n",(0,i.jsx)(t.h3,{id:"drop-in-service-mesh",children:"Drop-in service mesh"}),"\n",(0,i.jsx)(t.p,{children:"Contrast can be configured to handle TLS in a sidecar container.\nThis is useful for workloads that are hard to configure with custom certificates, like Java applications."}),"\n",(0,i.jsx)(t.p,{children:"Configuration of the sidecar depends heavily on the application.\nThe following example is for an application with these properties:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"The container has a main application at TCP port 8001, which should be TLS-wrapped and doesn't require client authentication."}),"\n",(0,i.jsx)(t.li,{children:"The container has a metrics endpoint at TCP port 8080, which should be accessible in plain text."}),"\n",(0,i.jsx)(t.li,{children:"All other endpoints require client authentication."}),"\n",(0,i.jsxs)(t.li,{children:["The app connects to a Kubernetes service ",(0,i.jsx)(t.code,{children:"backend.default:4001"}),", which requires client authentication."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Add the following annotations to your workload:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'metadata: # apps/v1.Deployment, apps/v1.DaemonSet, ...\n  annotations:\n    contrast.edgeless.systems/servicemesh-ingress: "main#8001#false##metrics#8080#true"\n    contrast.edgeless.systems/servicemesh-egress: "backend#127.0.0.2:4001#backend.default:4001"\n'})}),"\n",(0,i.jsxs)(t.p,{children:["During the ",(0,i.jsx)(t.code,{children:"generate"})," step, this configuration will be translated into a Service Mesh sidecar container which handles TLS connections automatically.\nThe only change required to the app itself is to let it connect to ",(0,i.jsx)(t.code,{children:"127.0.0.2:4001"})," to reach the backend service.\nYou can find more detailed documentation in the ",(0,i.jsx)(t.a,{href:"/contrast/pr-preview/pr-1655/next/architecture/components/service-mesh",children:"Service Mesh chapter"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"go-integration",children:"Go integration"}),"\n",(0,i.jsxs)(t.p,{children:["The mesh certificate contained in ",(0,i.jsx)(t.code,{children:"certChain.pem"})," authenticates this workload, while the mesh CA certificate ",(0,i.jsx)(t.code,{children:"mesh-ca.pem"})," authenticates its peers.\nYour app should turn on client authentication to ensure peers are running as confidential containers, too.\nSee the ",(0,i.jsx)(t.a,{href:"/contrast/pr-preview/pr-1655/next/architecture/components/service-mesh#public-key-infrastructure",children:"Certificate Authority"})," section for detailed information about these certificates."]}),"\n",(0,i.jsx)(t.p,{children:"The following example shows how to configure a Golang app, with error handling omitted for clarity."}),"\n",(0,i.jsxs)(r,{groupId:"golang-tls-setup",children:[(0,i.jsx)(n,{value:"client",label:"Client",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-go",children:'caCerts := x509.NewCertPool()\ncaCert, _ := os.ReadFile("/contrast/tls-config/mesh-ca.pem")\ncaCerts.AppendCertsFromPEM(caCert)\ncert, _ := tls.LoadX509KeyPair("/contrast/tls-config/certChain.pem", "/contrast/tls-config/key.pem")\ncfg := &tls.Config{\n  Certificates: []tls.Certificate{cert},\n  RootCAs: caCerts,\n}\n'})})}),(0,i.jsx)(n,{value:"server",label:"Server",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-go",children:'caCerts := x509.NewCertPool()\ncaCert, _ := os.ReadFile("/contrast/tls-config/mesh-ca.pem")\ncaCerts.AppendCertsFromPEM(caCert)\ncert, _ := tls.LoadX509KeyPair("/contrast/tls-config/certChain.pem", "/contrast/tls-config/key.pem")\ncfg := &tls.Config{\n  Certificates: []tls.Certificate{cert},\n  ClientAuth: tls.RequireAndVerifyClientCert,\n  ClientCAs: caCerts,\n}\n'})})})]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}function p(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);