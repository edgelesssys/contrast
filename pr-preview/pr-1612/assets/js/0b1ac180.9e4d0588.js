"use strict";(self.webpackChunkcontrast_docs=self.webpackChunkcontrast_docs||[]).push([[5863],{13336:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"architecture/overview","title":"Overview","description":"This page introduces the core components of Contrast and explains its architectural principles.","source":"@site/docs/architecture/overview.md","sourceDirName":"architecture","slug":"/architecture/overview","permalink":"/contrast/pr-preview/pr-1612/next/architecture/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/edgelesssys/contrast/edit/main/docs/docs/architecture/overview.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Security","permalink":"/contrast/pr-preview/pr-1612/next/security"},"next":{"title":"Runtime","permalink":"/contrast/pr-preview/pr-1612/next/architecture/components/runtime"}}');var r=t(74848),i=t(28453);const o={},a="Overview",c={},l=[{value:"Components",id:"components",level:2},{value:"Architectural goals",id:"architectural-goals",level:2}];function d(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"overview",children:"Overview"})}),"\n",(0,r.jsx)(n.p,{children:"This page introduces the core components of Contrast and explains its architectural principles."}),"\n",(0,r.jsx)(n.h2,{id:"components",children:"Components"}),"\n",(0,r.jsx)(n.p,{children:"Contrast consists of the following main components:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Contrast Kubernetes runtime"}),":\nContrast provides a custom Kubernetes ",(0,r.jsx)(n.code,{children:"RuntimeClass"})," that defines a runtime handler for ",(0,r.jsx)(n.code,{children:"containerd"}),".\nThis handler runs containers inside Confidential Virtual Machines (CVMs).\nThe runtime is based on Kata Containers and the Confidential Containers (CoCo) project."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Runtime policies"}),":\nStrictly control host-to-CVM communication on worker nodes and ensure that only approved workloads are allowed to start inside CVMs."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Contrast Coordinator"}),":\nThe Contrast Coordinator is an additional service deployed to the cluster.\nLike other components, it runs inside a CVM using the Contrast runtime.\nIt serves as the central attestation authority, ensuring that only verified workloads can join the trusted service mesh.\nThe Coordinator uses a ",(0,r.jsx)(n.em,{children:"manifest"}),", a ",(0,r.jsx)(n.code,{children:".json"})," file that defines the trusted state of your cluster by listing cryptographic hashes for all approved workloads.\nEach CVM\u2019s attestation is verified against this manifest before the workload is trusted."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Initializer"}),":\nThe initializer runs as an init container within confidential pods.\nIt implements the attestation logic and constitutes the attestation endpoint on the workload side."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Service mesh"}),":\nThe Contrast Coordinator also acts as a Certificate Authority (CA), issuing certificates only to workloads that successfully pass attestation.\nThese certificates can be used to establish a trusted service mesh for secure pod-to-pod communication.\nIt can also be presented to external clients, allowing them to verify the service\u2019s identity."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Contrast CLI"}),":\nThis command-line tool verifies the integrity and authenticity of both the Coordinator and the full deployment using remote attestation.\nData owners can use it to verify that a deployment is trustworthy.\nThe CLI also pre-processes deployment files, adjusting them automatically for a secure Contrast integration."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"architectural-goals",children:"Architectural goals"}),"\n",(0,r.jsx)(n.p,{children:"Contrast is designed to achieve the following architectural goals:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Isolation"}),"\nAll workloads run in CVMs, isolating them from the underlying infrastructure and cloud provider."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"End-to-end encryption"}),"\nMemory is encrypted at runtime, and all cluster communication is confidential and authenticated from end to end."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Integrity & authenticity"}),"\nWorkload integrity and the security of the environment are verified using hardware-based attestation.\nOnly trusted workloads are permitted to run."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Seamless integration"}),"\nContrast integrates with existing Kubernetes clusters via a custom runtime and attestation components, requiring minimal changes to existing workflows."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Transparency"}),"\nAll reference values for the trusted state are fully open and auditable.\nContrast relies on open-source code and reproducible builds to ensure full transparency."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(96540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);