"use strict";(globalThis.webpackChunkcontrast_docs=globalThis.webpackChunkcontrast_docs||[]).push([[3647],{23375:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"howto/encrypted-storage","title":"Set up encrypted persistent storage","description":"This section guides you through the process of configuring encrypted persistent storage for your application.","source":"@site/versioned_docs/version-1.14/howto/encrypted-storage.md","sourceDirName":"howto","slug":"/howto/encrypted-storage","permalink":"/contrast/pr-preview/pr-1877/howto/encrypted-storage","draft":false,"unlisted":false,"editUrl":"https://github.com/edgelesssys/contrast/edit/main/docs/versioned_docs/version-1.14/howto/encrypted-storage.md","tags":[],"version":"1.14","frontMatter":{},"sidebar":"docs","previous":{"title":"Recover Contrast coordinator","permalink":"/contrast/pr-preview/pr-1877/howto/workload-deployment/recover-coordinator"},"next":{"title":"Hardening","permalink":"/contrast/pr-preview/pr-1877/howto/hardening"}}');var r=n(74848),s=n(28453);const i={},a="Set up encrypted persistent storage",c={},d=[{value:"Applicability",id:"applicability",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"How-to",id:"how-to",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Deployment",id:"deployment",level:3},{value:"Example application: MySQL",id:"example-application-mysql",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"set-up-encrypted-persistent-storage",children:"Set up encrypted persistent storage"})}),"\n",(0,r.jsx)(t.p,{children:"This section guides you through the process of configuring encrypted persistent storage for your application."}),"\n",(0,r.jsx)(t.h2,{id:"applicability",children:"Applicability"}),"\n",(0,r.jsx)(t.p,{children:"This step is recommended for any Contrast deployment that stores sensitive data persistently."}),"\n",(0,r.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"/contrast/pr-preview/pr-1877/howto/cluster-setup/bare-metal",children:"Set up your cluster"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"/contrast/pr-preview/pr-1877/howto/install-cli",children:"Install CLI"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"/contrast/pr-preview/pr-1877/howto/workload-deployment/runtime-deployment",children:"Deploy the Contrast runtime"})}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"how-to",children:"How-to"}),"\n",(0,r.jsxs)(t.p,{children:["The following demonstrates how to set up an encrypted LUKS mount for an arbitrary ",(0,r.jsx)(t.code,{children:"/mount/path"})," directory to easily deploy an application with encrypted persistent storage using Contrast."]}),"\n",(0,r.jsx)(t.h3,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(t.p,{children:["Add a ",(0,r.jsx)(t.code,{children:"volume"})," of type ",(0,r.jsx)(t.code,{children:"emptyDir"})," to your pod.\nMount it through a ",(0,r.jsx)(t.code,{children:"volumeMount"})," with ",(0,r.jsx)(t.code,{children:"HostToContainer"})," propagation.\nThe specified ",(0,r.jsx)(t.code,{children:"mountPath"})," is where the Contrast Initializer will mount the encrypted volume.\nUse a ",(0,r.jsx)(t.code,{children:"volumeClaimTemplate"})," to make a persistent storage device available to your deployment.\nThe Initializer creates an encrypted volume and a filesystem on this device.\nSupported volume types can be found in the ",(0,r.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/storage/persistent-volumes/#raw-block-volume-support",children:"k8s documentation"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Finally, add the ",(0,r.jsx)(t.a,{href:"/contrast/pr-preview/pr-1877/architecture/k8s-yaml-elements",children:"Contrast annotation"})," ",(0,r.jsx)(t.code,{children:"contrast.edgeless.systems/secure-pv"})," with value ",(0,r.jsx)(t.code,{children:"device-name:mount-name"}),".\nThe presence of this annotation instructs an init container running ",(0,r.jsx)(t.code,{children:"cryptsetup"}),"\nto use the workload secret at ",(0,r.jsx)(t.code,{children:"/contrast/secrets/workload-secret-seed"})," to generate\na key and setup the block device as a LUKS partition. Before starting the application container,\nthe init container uses the generated key to open the LUKS device, which is then mounted\nby the application container. For the application container, this process is completely\ntransparent and works like mounting any other volume. The ",(0,r.jsx)(t.code,{children:"cryptsetup"})," container\nwill remain running to provide the necessary decryption context for the workload\ncontainer."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:"spec: # v1.StatefulSetSpec\n  template:\n    metadata:\n      annotations:\n        contrast.edgeless.systems/secure-pv: device-name:mount-name\n    spec:\n      containers:\n      - volumeMounts:\n        - mountPath: /mount/path\n          mountPropagation: HostToContainer\n          name: mount-name\n      volumes:\n      - emptyDir: {}\n        name: mount-name\n  volumeClaimTemplates:\n  - apiVersion: v1\n    kind: PersistentVolumeClaim\n    metadata:\n      name: device-name\n    spec:\n      accessModes:\n      - ReadWriteOnce\n      resources:\n        requests:\n          storage: 1Gi\n      volumeMode: Block\n"})}),"\n",(0,r.jsx)(t.admonition,{title:"Persistent workload secrets",type:"note",children:(0,r.jsxs)(t.p,{children:["Secure persistent volumes make use of workload secrets to be able to re-open devices after container restarts.\nPlease read about the implications in the ",(0,r.jsx)(t.a,{href:"/contrast/pr-preview/pr-1877/architecture/secrets#workload-secrets",children:"workload secrets"})," section."]})}),"\n",(0,r.jsx)(t.h3,{id:"deployment",children:"Deployment"}),"\n",(0,r.jsx)(t.p,{children:"Follow the steps of the generic workload deployment instructions:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"/contrast/pr-preview/pr-1877/howto/workload-deployment/add-coordinator",children:"Add the Coordinator."})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"/contrast/pr-preview/pr-1877/howto/workload-deployment/generate-annotations",children:"Generate the annotations."})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"/contrast/pr-preview/pr-1877/howto/workload-deployment/deploy-application",children:"Apply the resources."})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"/contrast/pr-preview/pr-1877/howto/workload-deployment/set-manifest",children:"Set the manifest."})}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"example-application-mysql",children:"Example application: MySQL"}),"\n",(0,r.jsxs)(t.p,{children:["The above guide can be tried out with a ",(0,r.jsx)(t.a,{href:"https://mysql.com",children:"MySQL"})," sample deployment which is part of the contrast release.\nYou can add the deployment file to your resources by running:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",children:"curl -fLO https://github.com/edgelesssys/contrast/releases/download/v1.14.0/mysql-demo.yml --output-dir resources\n"})}),"\n",(0,r.jsxs)(t.admonition,{title:"MySQL",type:"note",children:[(0,r.jsxs)(t.p,{children:["MySQL is an open-source database used to organize data into\ntables and quickly retrieve information about its content. All of the data in a\nMySQL database is stored in the ",(0,r.jsx)(t.code,{children:"/var/lib/mysql"})," directory. In this example, we\nuse the workload secret to setup an encrypted LUKS mount for the\n",(0,r.jsx)(t.code,{children:"/var/lib/mysql"})," directory to easily deploy an application with encrypted\npersistent storage using Contrast."]}),(0,r.jsxs)(t.p,{children:["The resources provided in this demo are designed for educational purposes and\nshouldn't be used in a production environment without proper evaluation. When\nworking with persistent storage, regular backups are recommended in order to\nprevent data loss. For confidential applications, please also refer to the\n",(0,r.jsx)(t.a,{href:"/contrast/pr-preview/pr-1877/howto/hardening",children:"security considerations"}),". Also be\naware of the differences in security implications of the workload secrets for\nthe data owner and the workload owner. For more details, see the ",(0,r.jsx)(t.a,{href:"/contrast/pr-preview/pr-1877/architecture/secrets#workload-secrets",children:"Workload\nSecrets"})," documentation."]})]}),"\n",(0,r.jsxs)(t.p,{children:["The MySQL server is defined as a ",(0,r.jsx)(t.code,{children:"StatefulSet"}),", with a storage setup analogous to what has been described above.\nA ",(0,r.jsx)(t.code,{children:"1Gi"})," block device is provided to the ",(0,r.jsx)(t.code,{children:"mysql-backend"})," container through a ",(0,r.jsx)(t.code,{children:"volumeClaimTemplate"})," and mounted to ",(0,r.jsx)(t.code,{children:"/var/lib/mysql"}),", MySQL's default state directory.\nAn example MySQL client is defined through a separate deployment. The ",(0,r.jsx)(t.code,{children:"mysql-client"})," container connects to the backend and calls on it to perform demo database operations.\nSince the backend's MySQL state directory is located on the prepared storage device, the results of these operations are persisted."]}),"\n",(0,r.jsxs)(t.p,{children:["Follow ",(0,r.jsx)(t.a,{href:"#deployment",children:"the steps given above"})," to reapply your configuration."]}),"\n",(0,r.jsxs)(t.admonition,{title:"Runtime class and Initializer",type:"note",children:[(0,r.jsxs)(t.p,{children:["The deployment YAML shipped for this demo is already configured to be used with Contrast.\nA ",(0,r.jsx)(t.a,{href:"../architecture/components/runtime",children:"runtime class"})," ",(0,r.jsx)(t.code,{children:"contrast-cc"}),"\nwas added to the pods to signal they should be run as confidential containers. During the generation process,\nthe Contrast ",(0,r.jsx)(t.a,{href:"/contrast/pr-preview/pr-1877/architecture/components/initializer",children:"Initializer"})," will be added as an init container to these\nworkloads. It will attest the pod to the Coordinator and fetch the workload certificates and the workload secret."]}),(0,r.jsxs)(t.p,{children:["Further, the deployment YAML is also configured with the Contrast ",(0,r.jsx)(t.a,{href:"/contrast/pr-preview/pr-1877/architecture/components/service-mesh",children:"service mesh"}),".\nThe configured service mesh proxy provides transparent protection for the communication between\nthe MySQL server and client."]})]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var o=n(96540);const r={},s=o.createContext(r);function i(e){const t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);