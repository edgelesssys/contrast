// Code generated by protoc-gen-go-ttrpc. DO NOT EDIT.
// source: imagepuller.proto
package api

import (
	context "context"
	ttrpc "github.com/containerd/ttrpc"
)

type ImagePullServiceService interface {
	PullImage(context.Context, *ImagePullRequest) (*ImagePullResponse, error)
}

func RegisterImagePullServiceService(srv *ttrpc.Server, svc ImagePullServiceService) {
	srv.RegisterService("api.ImagePullService", &ttrpc.ServiceDesc{
		Methods: map[string]ttrpc.Method{
			"PullImage": func(ctx context.Context, unmarshal func(interface{}) error) (interface{}, error) {
				var req ImagePullRequest
				if err := unmarshal(&req); err != nil {
					return nil, err
				}
				return svc.PullImage(ctx, &req)
			},
		},
	})
}

type imagepullserviceClient struct {
	client *ttrpc.Client
}

func NewImagePullServiceClient(client *ttrpc.Client) ImagePullServiceService {
	return &imagepullserviceClient{
		client: client,
	}
}

func (c *imagepullserviceClient) PullImage(ctx context.Context, req *ImagePullRequest) (*ImagePullResponse, error) {
	var resp ImagePullResponse
	if err := c.client.Call(ctx, "api.ImagePullService", "PullImage", req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}
