apiVersion: apps/v1
kind: Deployment
metadata:
  name: openssl-frontend
  namespace: edg-default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: openssl-frontend
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: openssl-frontend
    spec:
      runtimeClassName: kata-cc-isolation
      initContainers:
        - name: initializer
          image: "ghcr.io/edgelesssys/nunki/initializer:latest"
          env:
            - name: COORDINATOR_HOST
              value: coordinator
          volumeMounts:
            - name: tls-certs
              mountPath: /tls-config
          resources:
            requests:
              memory: 50Mi
            limits:
              memory: 50Mi
      containers:
        - name: openssl-frontend
          image: ghcr.io/3u13r/nunki/openssl:latest
          command:
            - /bin/bash
            - "-c"
            - "echo Workload started\nopenssl s_server -www -port 443 -cert /tls-config/certChain.pem -key /tls-config/key.pem -cert_chain /tls-config/certChain.pem &\nwhile true; do \n  echo \"THIS IS A TEST MESSAGE\" | openssl s_client -connect openssl-backend:443 -verify_return_error -CAfile /tls-config/MeshCACert.pem -cert /tls-config/certChain.pem -key /tls-config/key.pem\n  sleep 10\ndone\n"
          volumeMounts:
            - name: tls-certs
              mountPath: /tls-config
          resources:
            requests:
              memory: 50Mi
            limits:
              memory: 50Mi
      volumes:
        - name: tls-certs
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: openssl-frontend
  namespace: edg-default
spec:
  selector:
    app.kubernetes.io/name: openssl-frontend
  ports:
    - name: openssl
      port: 443
      targetPort: 443
