// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: meshapi.proto

package meshapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewMeshCertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewMeshCertRequest) Reset() {
	*x = NewMeshCertRequest{}
	mi := &file_meshapi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewMeshCertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMeshCertRequest) ProtoMessage() {}

func (x *NewMeshCertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meshapi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMeshCertRequest.ProtoReflect.Descriptor instead.
func (*NewMeshCertRequest) Descriptor() ([]byte, []int) {
	return file_meshapi_proto_rawDescGZIP(), []int{0}
}

type NewMeshCertResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PEM-encoded certificate used by the workload as CA
	MeshCACert []byte `protobuf:"bytes,1,opt,name=MeshCACert,proto3" json:"MeshCACert,omitempty"`
	// Concatenated PEM-encoded certificates used by the workload certificate chain
	CertChain []byte `protobuf:"bytes,2,opt,name=CertChain,proto3" json:"CertChain,omitempty"`
	// PEM-encoded certificate when workloads trust also workloads from previous manifests
	RootCACert []byte `protobuf:"bytes,3,opt,name=RootCACert,proto3" json:"RootCACert,omitempty"`
	// Raw byte slice which can be used to derive more secrets
	WorkloadSecret []byte `protobuf:"bytes,4,opt,name=WorkloadSecret,proto3" json:"WorkloadSecret,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NewMeshCertResponse) Reset() {
	*x = NewMeshCertResponse{}
	mi := &file_meshapi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewMeshCertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMeshCertResponse) ProtoMessage() {}

func (x *NewMeshCertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meshapi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMeshCertResponse.ProtoReflect.Descriptor instead.
func (*NewMeshCertResponse) Descriptor() ([]byte, []int) {
	return file_meshapi_proto_rawDescGZIP(), []int{1}
}

func (x *NewMeshCertResponse) GetMeshCACert() []byte {
	if x != nil {
		return x.MeshCACert
	}
	return nil
}

func (x *NewMeshCertResponse) GetCertChain() []byte {
	if x != nil {
		return x.CertChain
	}
	return nil
}

func (x *NewMeshCertResponse) GetRootCACert() []byte {
	if x != nil {
		return x.RootCACert
	}
	return nil
}

func (x *NewMeshCertResponse) GetWorkloadSecret() []byte {
	if x != nil {
		return x.WorkloadSecret
	}
	return nil
}

type RecoverRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecoverRequest) Reset() {
	*x = RecoverRequest{}
	mi := &file_meshapi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverRequest) ProtoMessage() {}

func (x *RecoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meshapi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverRequest.ProtoReflect.Descriptor instead.
func (*RecoverRequest) Descriptor() ([]byte, []int) {
	return file_meshapi_proto_rawDescGZIP(), []int{2}
}

type RecoverResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Seed           []byte                 `protobuf:"bytes,1,opt,name=Seed,proto3" json:"Seed,omitempty"`
	Salt           []byte                 `protobuf:"bytes,2,opt,name=Salt,proto3" json:"Salt,omitempty"`
	MeshCAKey      []byte                 `protobuf:"bytes,3,opt,name=MeshCAKey,proto3" json:"MeshCAKey,omitempty"`
	LatestManifest []byte                 `protobuf:"bytes,4,opt,name=LatestManifest,proto3" json:"LatestManifest,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RecoverResponse) Reset() {
	*x = RecoverResponse{}
	mi := &file_meshapi_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecoverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverResponse) ProtoMessage() {}

func (x *RecoverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meshapi_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverResponse.ProtoReflect.Descriptor instead.
func (*RecoverResponse) Descriptor() ([]byte, []int) {
	return file_meshapi_proto_rawDescGZIP(), []int{3}
}

func (x *RecoverResponse) GetSeed() []byte {
	if x != nil {
		return x.Seed
	}
	return nil
}

func (x *RecoverResponse) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *RecoverResponse) GetMeshCAKey() []byte {
	if x != nil {
		return x.MeshCAKey
	}
	return nil
}

func (x *RecoverResponse) GetLatestManifest() []byte {
	if x != nil {
		return x.LatestManifest
	}
	return nil
}

var File_meshapi_proto protoreflect.FileDescriptor

const file_meshapi_proto_rawDesc = "" +
	"\n" +
	"\rmeshapi.proto\x12\ameshapi\"-\n" +
	"\x12NewMeshCertRequestJ\x04\b\x01\x10\x02R\x11PeerPublicKeyHash\"\x9b\x01\n" +
	"\x13NewMeshCertResponse\x12\x1e\n" +
	"\n" +
	"MeshCACert\x18\x01 \x01(\fR\n" +
	"MeshCACert\x12\x1c\n" +
	"\tCertChain\x18\x02 \x01(\fR\tCertChain\x12\x1e\n" +
	"\n" +
	"RootCACert\x18\x03 \x01(\fR\n" +
	"RootCACert\x12&\n" +
	"\x0eWorkloadSecret\x18\x04 \x01(\fR\x0eWorkloadSecret\"\x10\n" +
	"\x0eRecoverRequest\"\x7f\n" +
	"\x0fRecoverResponse\x12\x12\n" +
	"\x04Seed\x18\x01 \x01(\fR\x04Seed\x12\x12\n" +
	"\x04Salt\x18\x02 \x01(\fR\x04Salt\x12\x1c\n" +
	"\tMeshCAKey\x18\x03 \x01(\fR\tMeshCAKey\x12&\n" +
	"\x0eLatestManifest\x18\x04 \x01(\fR\x0eLatestManifest2\x91\x01\n" +
	"\aMeshAPI\x12H\n" +
	"\vNewMeshCert\x12\x1b.meshapi.NewMeshCertRequest\x1a\x1c.meshapi.NewMeshCertResponse\x12<\n" +
	"\aRecover\x12\x17.meshapi.RecoverRequest\x1a\x18.meshapi.RecoverResponseB2Z0github.com/edgelesssys/contrast/internal/meshapib\x06proto3"

var (
	file_meshapi_proto_rawDescOnce sync.Once
	file_meshapi_proto_rawDescData []byte
)

func file_meshapi_proto_rawDescGZIP() []byte {
	file_meshapi_proto_rawDescOnce.Do(func() {
		file_meshapi_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meshapi_proto_rawDesc), len(file_meshapi_proto_rawDesc)))
	})
	return file_meshapi_proto_rawDescData
}

var file_meshapi_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_meshapi_proto_goTypes = []any{
	(*NewMeshCertRequest)(nil),  // 0: meshapi.NewMeshCertRequest
	(*NewMeshCertResponse)(nil), // 1: meshapi.NewMeshCertResponse
	(*RecoverRequest)(nil),      // 2: meshapi.RecoverRequest
	(*RecoverResponse)(nil),     // 3: meshapi.RecoverResponse
}
var file_meshapi_proto_depIdxs = []int32{
	0, // 0: meshapi.MeshAPI.NewMeshCert:input_type -> meshapi.NewMeshCertRequest
	2, // 1: meshapi.MeshAPI.Recover:input_type -> meshapi.RecoverRequest
	1, // 2: meshapi.MeshAPI.NewMeshCert:output_type -> meshapi.NewMeshCertResponse
	3, // 3: meshapi.MeshAPI.Recover:output_type -> meshapi.RecoverResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_meshapi_proto_init() }
func file_meshapi_proto_init() {
	if File_meshapi_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meshapi_proto_rawDesc), len(file_meshapi_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meshapi_proto_goTypes,
		DependencyIndexes: file_meshapi_proto_depIdxs,
		MessageInfos:      file_meshapi_proto_msgTypes,
	}.Build()
	File_meshapi_proto = out.File
	file_meshapi_proto_goTypes = nil
	file_meshapi_proto_depIdxs = nil
}
