// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: userapi.proto

package userapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetManifestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Manifest      []byte                 `protobuf:"bytes,1,opt,name=Manifest,proto3" json:"Manifest,omitempty"`
	Policies      [][]byte               `protobuf:"bytes,2,rep,name=Policies,proto3" json:"Policies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetManifestRequest) Reset() {
	*x = SetManifestRequest{}
	mi := &file_userapi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetManifestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetManifestRequest) ProtoMessage() {}

func (x *SetManifestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userapi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetManifestRequest.ProtoReflect.Descriptor instead.
func (*SetManifestRequest) Descriptor() ([]byte, []int) {
	return file_userapi_proto_rawDescGZIP(), []int{0}
}

func (x *SetManifestRequest) GetManifest() []byte {
	if x != nil {
		return x.Manifest
	}
	return nil
}

func (x *SetManifestRequest) GetPolicies() [][]byte {
	if x != nil {
		return x.Policies
	}
	return nil
}

type SetManifestResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PEM-encoded certificate
	RootCA []byte `protobuf:"bytes,1,opt,name=RootCA,proto3" json:"RootCA,omitempty"`
	// PEM-encoded certificate
	MeshCA []byte `protobuf:"bytes,2,opt,name=MeshCA,proto3" json:"MeshCA,omitempty"`
	// Secret seed (share), encrypted with each of the recovery holders' public keys.
	SeedSharesDoc *SeedShareDocument `protobuf:"bytes,3,opt,name=SeedSharesDoc,proto3" json:"SeedSharesDoc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetManifestResponse) Reset() {
	*x = SetManifestResponse{}
	mi := &file_userapi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetManifestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetManifestResponse) ProtoMessage() {}

func (x *SetManifestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userapi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetManifestResponse.ProtoReflect.Descriptor instead.
func (*SetManifestResponse) Descriptor() ([]byte, []int) {
	return file_userapi_proto_rawDescGZIP(), []int{1}
}

func (x *SetManifestResponse) GetRootCA() []byte {
	if x != nil {
		return x.RootCA
	}
	return nil
}

func (x *SetManifestResponse) GetMeshCA() []byte {
	if x != nil {
		return x.MeshCA
	}
	return nil
}

func (x *SetManifestResponse) GetSeedSharesDoc() *SeedShareDocument {
	if x != nil {
		return x.SeedSharesDoc
	}
	return nil
}

type SeedShareDocument struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeedShares    []*SeedShare           `protobuf:"bytes,1,rep,name=SeedShares,proto3" json:"SeedShares,omitempty"`
	Salt          []byte                 `protobuf:"bytes,2,opt,name=salt,proto3" json:"salt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeedShareDocument) Reset() {
	*x = SeedShareDocument{}
	mi := &file_userapi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeedShareDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeedShareDocument) ProtoMessage() {}

func (x *SeedShareDocument) ProtoReflect() protoreflect.Message {
	mi := &file_userapi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeedShareDocument.ProtoReflect.Descriptor instead.
func (*SeedShareDocument) Descriptor() ([]byte, []int) {
	return file_userapi_proto_rawDescGZIP(), []int{2}
}

func (x *SeedShareDocument) GetSeedShares() []*SeedShare {
	if x != nil {
		return x.SeedShares
	}
	return nil
}

func (x *SeedShareDocument) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

type SeedShare struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublicKey     string                 `protobuf:"bytes,1,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	EncryptedSeed []byte                 `protobuf:"bytes,2,opt,name=EncryptedSeed,proto3" json:"EncryptedSeed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeedShare) Reset() {
	*x = SeedShare{}
	mi := &file_userapi_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeedShare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeedShare) ProtoMessage() {}

func (x *SeedShare) ProtoReflect() protoreflect.Message {
	mi := &file_userapi_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeedShare.ProtoReflect.Descriptor instead.
func (*SeedShare) Descriptor() ([]byte, []int) {
	return file_userapi_proto_rawDescGZIP(), []int{3}
}

func (x *SeedShare) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *SeedShare) GetEncryptedSeed() []byte {
	if x != nil {
		return x.EncryptedSeed
	}
	return nil
}

type GetManifestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetManifestsRequest) Reset() {
	*x = GetManifestsRequest{}
	mi := &file_userapi_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetManifestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManifestsRequest) ProtoMessage() {}

func (x *GetManifestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userapi_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManifestsRequest.ProtoReflect.Descriptor instead.
func (*GetManifestsRequest) Descriptor() ([]byte, []int) {
	return file_userapi_proto_rawDescGZIP(), []int{4}
}

type GetManifestsResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Manifests [][]byte               `protobuf:"bytes,1,rep,name=Manifests,proto3" json:"Manifests,omitempty"`
	Policies  [][]byte               `protobuf:"bytes,2,rep,name=Policies,proto3" json:"Policies,omitempty"`
	// PEM-encoded certificate
	RootCA []byte `protobuf:"bytes,3,opt,name=RootCA,proto3" json:"RootCA,omitempty"`
	// PEM-encoded certificate
	MeshCA        []byte `protobuf:"bytes,4,opt,name=MeshCA,proto3" json:"MeshCA,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetManifestsResponse) Reset() {
	*x = GetManifestsResponse{}
	mi := &file_userapi_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetManifestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManifestsResponse) ProtoMessage() {}

func (x *GetManifestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userapi_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManifestsResponse.ProtoReflect.Descriptor instead.
func (*GetManifestsResponse) Descriptor() ([]byte, []int) {
	return file_userapi_proto_rawDescGZIP(), []int{5}
}

func (x *GetManifestsResponse) GetManifests() [][]byte {
	if x != nil {
		return x.Manifests
	}
	return nil
}

func (x *GetManifestsResponse) GetPolicies() [][]byte {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *GetManifestsResponse) GetRootCA() []byte {
	if x != nil {
		return x.RootCA
	}
	return nil
}

func (x *GetManifestsResponse) GetMeshCA() []byte {
	if x != nil {
		return x.MeshCA
	}
	return nil
}

type RecoverRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Seed          []byte                 `protobuf:"bytes,1,opt,name=Seed,proto3" json:"Seed,omitempty"`
	Salt          []byte                 `protobuf:"bytes,2,opt,name=Salt,proto3" json:"Salt,omitempty"`
	Force         bool                   `protobuf:"varint,3,opt,name=Force,proto3" json:"Force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecoverRequest) Reset() {
	*x = RecoverRequest{}
	mi := &file_userapi_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverRequest) ProtoMessage() {}

func (x *RecoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userapi_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverRequest.ProtoReflect.Descriptor instead.
func (*RecoverRequest) Descriptor() ([]byte, []int) {
	return file_userapi_proto_rawDescGZIP(), []int{6}
}

func (x *RecoverRequest) GetSeed() []byte {
	if x != nil {
		return x.Seed
	}
	return nil
}

func (x *RecoverRequest) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *RecoverRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type RecoverResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecoverResponse) Reset() {
	*x = RecoverResponse{}
	mi := &file_userapi_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecoverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverResponse) ProtoMessage() {}

func (x *RecoverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userapi_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverResponse.ProtoReflect.Descriptor instead.
func (*RecoverResponse) Descriptor() ([]byte, []int) {
	return file_userapi_proto_rawDescGZIP(), []int{7}
}

var File_userapi_proto protoreflect.FileDescriptor

const file_userapi_proto_rawDesc = "" +
	"\n" +
	"\ruserapi.proto\x12\x1cedgelesssys.contrast.userapi\"L\n" +
	"\x12SetManifestRequest\x12\x1a\n" +
	"\bManifest\x18\x01 \x01(\fR\bManifest\x12\x1a\n" +
	"\bPolicies\x18\x02 \x03(\fR\bPolicies\"\x9c\x01\n" +
	"\x13SetManifestResponse\x12\x16\n" +
	"\x06RootCA\x18\x01 \x01(\fR\x06RootCA\x12\x16\n" +
	"\x06MeshCA\x18\x02 \x01(\fR\x06MeshCA\x12U\n" +
	"\rSeedSharesDoc\x18\x03 \x01(\v2/.edgelesssys.contrast.userapi.SeedShareDocumentR\rSeedSharesDoc\"p\n" +
	"\x11SeedShareDocument\x12G\n" +
	"\n" +
	"SeedShares\x18\x01 \x03(\v2'.edgelesssys.contrast.userapi.SeedShareR\n" +
	"SeedShares\x12\x12\n" +
	"\x04salt\x18\x02 \x01(\fR\x04salt\"O\n" +
	"\tSeedShare\x12\x1c\n" +
	"\tPublicKey\x18\x01 \x01(\tR\tPublicKey\x12$\n" +
	"\rEncryptedSeed\x18\x02 \x01(\fR\rEncryptedSeed\"\x15\n" +
	"\x13GetManifestsRequest\"\x80\x01\n" +
	"\x14GetManifestsResponse\x12\x1c\n" +
	"\tManifests\x18\x01 \x03(\fR\tManifests\x12\x1a\n" +
	"\bPolicies\x18\x02 \x03(\fR\bPolicies\x12\x16\n" +
	"\x06RootCA\x18\x03 \x01(\fR\x06RootCA\x12\x16\n" +
	"\x06MeshCA\x18\x04 \x01(\fR\x06MeshCA\"N\n" +
	"\x0eRecoverRequest\x12\x12\n" +
	"\x04Seed\x18\x01 \x01(\fR\x04Seed\x12\x12\n" +
	"\x04Salt\x18\x02 \x01(\fR\x04Salt\x12\x14\n" +
	"\x05Force\x18\x03 \x01(\bR\x05Force\"\x11\n" +
	"\x0fRecoverResponse2\xdc\x02\n" +
	"\aUserAPI\x12r\n" +
	"\vSetManifest\x120.edgelesssys.contrast.userapi.SetManifestRequest\x1a1.edgelesssys.contrast.userapi.SetManifestResponse\x12u\n" +
	"\fGetManifests\x121.edgelesssys.contrast.userapi.GetManifestsRequest\x1a2.edgelesssys.contrast.userapi.GetManifestsResponse\x12f\n" +
	"\aRecover\x12,.edgelesssys.contrast.userapi.RecoverRequest\x1a-.edgelesssys.contrast.userapi.RecoverResponseB2Z0github.com/edgelesssys/contrast/internal/userapib\x06proto3"

var (
	file_userapi_proto_rawDescOnce sync.Once
	file_userapi_proto_rawDescData []byte
)

func file_userapi_proto_rawDescGZIP() []byte {
	file_userapi_proto_rawDescOnce.Do(func() {
		file_userapi_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_userapi_proto_rawDesc), len(file_userapi_proto_rawDesc)))
	})
	return file_userapi_proto_rawDescData
}

var file_userapi_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_userapi_proto_goTypes = []any{
	(*SetManifestRequest)(nil),   // 0: edgelesssys.contrast.userapi.SetManifestRequest
	(*SetManifestResponse)(nil),  // 1: edgelesssys.contrast.userapi.SetManifestResponse
	(*SeedShareDocument)(nil),    // 2: edgelesssys.contrast.userapi.SeedShareDocument
	(*SeedShare)(nil),            // 3: edgelesssys.contrast.userapi.SeedShare
	(*GetManifestsRequest)(nil),  // 4: edgelesssys.contrast.userapi.GetManifestsRequest
	(*GetManifestsResponse)(nil), // 5: edgelesssys.contrast.userapi.GetManifestsResponse
	(*RecoverRequest)(nil),       // 6: edgelesssys.contrast.userapi.RecoverRequest
	(*RecoverResponse)(nil),      // 7: edgelesssys.contrast.userapi.RecoverResponse
}
var file_userapi_proto_depIdxs = []int32{
	2, // 0: edgelesssys.contrast.userapi.SetManifestResponse.SeedSharesDoc:type_name -> edgelesssys.contrast.userapi.SeedShareDocument
	3, // 1: edgelesssys.contrast.userapi.SeedShareDocument.SeedShares:type_name -> edgelesssys.contrast.userapi.SeedShare
	0, // 2: edgelesssys.contrast.userapi.UserAPI.SetManifest:input_type -> edgelesssys.contrast.userapi.SetManifestRequest
	4, // 3: edgelesssys.contrast.userapi.UserAPI.GetManifests:input_type -> edgelesssys.contrast.userapi.GetManifestsRequest
	6, // 4: edgelesssys.contrast.userapi.UserAPI.Recover:input_type -> edgelesssys.contrast.userapi.RecoverRequest
	1, // 5: edgelesssys.contrast.userapi.UserAPI.SetManifest:output_type -> edgelesssys.contrast.userapi.SetManifestResponse
	5, // 6: edgelesssys.contrast.userapi.UserAPI.GetManifests:output_type -> edgelesssys.contrast.userapi.GetManifestsResponse
	7, // 7: edgelesssys.contrast.userapi.UserAPI.Recover:output_type -> edgelesssys.contrast.userapi.RecoverResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_userapi_proto_init() }
func file_userapi_proto_init() {
	if File_userapi_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_userapi_proto_rawDesc), len(file_userapi_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_userapi_proto_goTypes,
		DependencyIndexes: file_userapi_proto_depIdxs,
		MessageInfos:      file_userapi_proto_msgTypes,
	}.Build()
	File_userapi_proto = out.File
	file_userapi_proto_goTypes = nil
	file_userapi_proto_depIdxs = nil
}
